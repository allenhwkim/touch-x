import{addCss,removeCss}from"elements-x";import{animate}from"./animate";const css="\n  x-slides {\n    border: 1px solid #CCC;\n    display: flex;\n    overflow-x: hidden;\n    width: 100%;\n    box-sizing: border-box;\n  }\n  x-slides > * {\n    min-width: 100%;\n  }\n";export class XSlides extends HTMLElement{constructor(...e){const t=super(...e);return this._touchSwipeListener=this.touchSwipeListener.bind(this),t}connectedCallback(){new TouchX(this),addCss(this,css),this.currentNo=this.getAttribute("selected")||0,Array.from(this.children).forEach(((e,t)=>e.setAttribute("index",t))),setTimeout((e=>this.setSlide(this.currentNo)),300),window.addEventListener("resize",(e=>this.setSlide(this.currentNo,!1))),document.body.addEventListener("x-swipe",this._touchSwipeListener)}disconnectedCallback(){removeCss(this),document.body.removeEventListener("x-swipe",this._touchSwipeListener)}animateTo(e){e=(e+this.children.length)%this.children.length;const t=this.querySelector(`[index="${e}"]`),i=this.scrollLeft,s=this.getScrollLeft(t)-i;return animate(this,((e,t)=>{this.scrollLeft=i+s*e}))}touchSwipeListener(e){const{x0:t,x2:i,type:s,speed:n}=e.detail;if("start"===s)this.dragStartX=this.scrollLeft;else if("move"===s)this.scrollLeft=this.dragStartX+(t-i);else if("end"===s){this.dragStartX=void 0;const e=i+(i-t)*(1+n);if(Math.abs(e-t)>this.offsetWidth/2){const e=i<t?this.currentNo+1:this.currentNo-1;this.animateTo(e).then((t=>this.setSlide(e)))}else this.animateTo(this.currentNo)}else"cancel"===s&&(this.dragStartX=void 0,this.setSlide(this.currentNo))}getScrollLeft(e){let[t,i]=[e.previousElementSibling,0];for(;t;)i+=t.offsetWidth,t=t.previousElementSibling;return i}setSlide(e){e=(e+this.children.length)%this.children.length,this.currentNo=e;const t=this.querySelector(`[index="${e}"]`),{prevSlideNum:i,nextSlideNum:s}=this._getNumSiblings(t),n=Math.floor(this.children.length/2);if(s>n){const e=s-n;for(var r=0;r<e;r++)this.insertBefore(this.lastElementChild,this.firstElementChild)}else if(i>=n){const e=i-n;for(r=0;r<=e;r++)this.insertBefore(this.firstElementChild,null)}this.scrollLeft=this.getScrollLeft(t)}_getNumSiblings(e){let[t,i]=[0,0],s=e.nextElementSibling;for(;s;)i++,s=s.nextElementSibling;let n=e.previousElementSibling;for(;n;)t++,n=n.previousElementSibling;return{prevSlideNum:t,nextSlideNum:i}}}customElements.get("x-slides")||customElements.define("x-slides",XSlides);