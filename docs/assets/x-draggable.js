import{addCss,removeCss}from"elements-x";const css="\n  x-draggable { user-select: none; }\n  .x-drop-active { box-shadow: 0 0 16px orange; transform: scale(1.05); }\n";export class XDraggable extends HTMLElement{constructor(...e){const t=super(...e);return this.dragClone,this.onDrop=e=>1,this._touchSwipeListener=this.touchSwipeListener.bind(this),t}connectedCallback(){const e=this.getAttribute("drop-zone");this.dropZones=e&&Array.from(document.querySelectorAll(e)),console.log(e,this.dropZones),Array.from(this.children).forEach((e=>{e.classList.add("x-draggable"),new TouchX(e)})),addCss(this,css),document.body.addEventListener("x-swipe",this._touchSwipeListener)}disconnectedCallback(){removeCss(this),document.body.removeEventListener("x-swipe",this._touchSwipeListener)}touchSwipeListener(e){const{x1:t,y1:s,x2:o,y2:n,touchStaEl:i,type:r}=e.detail,[l,a]=[i.offsetWidth,i.offsetHeight];if("start"===r)i.style.opacity=.5,i.classList.add("x-active"),i.classList.contains("x-draggable")&&(this.dragClone=i.cloneNode(!0),this.dragClone.style.position="absolute",console.log({x1:t,y1:s,w:l,h:a}),this.dragClone.style.left=t-l/2+"px",this.dragClone.style.top=s-a/2+"px",this.dragClone.style.width=`${l}px`,this.dragClone.style.height=`${a}px`,this.dragClone.addEventListener("contextmenu",(e=>e.preventDefault())),document.body.appendChild(this.dragClone));else if("move"===r&&this.dragClone){this.dragClone.style.opacity=1,this.dragClone.style.left=o-l/2+"px",this.dragClone.style.top=n-a/2+"px";const e=this.onDropZone(o-l/2,n-a/2);e&&!e.contains(i)?e.classList.add("x-drop-active"):this.dropZones.forEach((e=>e.classList.remove("x-drop-active")))}else if("end"===r){const t=this.onDropZone(o-l/2,n-a/2);t&&this.onDrop({dropZoneEl:t,...e.detail})&&t.appendChild(i),this.dropZones.forEach((e=>e.classList.remove("x-drop-active"))),i.style.opacity=null,i.classList.remove("x-active"),this.reset()}else"cancel"===r&&(i.style.opacity=null,i.classList.remove("x-active"),this.reset())}reset(){this.dragClone&&document.body.removeChild(this.dragClone),this.dragClone=void 0}onDropZone(e,t){if(!this.dropZones)return;return this.dropZones.find((s=>{const{x:o,y:n,width:i,height:r}=s.getBoundingClientRect();return o<=e&&n<=t&&e<=o+i&&t<=n+r}))}}customElements.get("x-draggable")||customElements.define("x-draggable",XDraggable);